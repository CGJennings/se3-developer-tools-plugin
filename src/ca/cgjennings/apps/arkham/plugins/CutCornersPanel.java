package ca.cgjennings.apps.arkham.plugins;

import ca.cgjennings.apps.arkham.AbstractGameComponentEditor;
import ca.cgjennings.apps.arkham.EditorAdapter;
import ca.cgjennings.apps.arkham.StrangeEons;
import ca.cgjennings.apps.arkham.StrangeEonsEditor;
import ca.cgjennings.apps.arkham.ToolWindow;
import ca.cgjennings.apps.arkham.component.GameComponent;
import ca.cgjennings.apps.arkham.sheet.Sheet;

/**
 * Allows interactive adjustment of a sheet's corner cut radius.
 *
 * @author Christopher G. jennings (<https://cgjennings.ca/contact>)
 */
public class CutCornersPanel extends javax.swing.JPanel implements DevToolProxy.UnloadablePanel {

    public CutCornersPanel(ToolWindow tw) {
        initComponents();
        onEditorChanged();
        listener = new EditorAdapter() {
            @Override
            public void editorSelected(StrangeEonsEditor editor) {
                onEditorChanged();
            }

            @Override
            public void editorDeselected(StrangeEonsEditor editor) {
                onEditorChanged();
            }
        };
        StrangeEons.getWindow().addEditorListener(listener);
        tw.pack();
    }

    private EditorAdapter listener;

    @Override
    public void onUnload() {
        StrangeEons.getWindow().removeEditorListener(listener);
        listener = null;
    }

    private void onEditorChanged() {
        boolean enable = false;
        StrangeEonsEditor ed = StrangeEons.getWindow().getActiveEditor();
        if (ed != null) {
            GameComponent gc = ed.getGameComponent();
            if (gc != null && gc.getSheets() != null && gc.getSheets().length > 0) {
                enable = true;
                radiusSpinner.setEnabled(true);
                radiusSpinner.setValue(gc.getSheets()[0].getCornerRadius());
            }
        }
        radiusSpinner.setEnabled(enable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        radiusSpinner = new javax.swing.JSpinner();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("Adjust corner cut radius:");

        radiusSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 144.0d, 0.25d));
        radiusSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radiusSpinnerStateChanged(evt);
            }
        });

        jLabel2.setText("pt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(radiusSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radiusSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radiusSpinnerStateChanged
        StrangeEonsEditor ed = StrangeEons.getWindow().getActiveEditor();
        if (ed != null) {
            GameComponent gc = ed.getGameComponent();
            if (gc != null && gc.getSheets() != null) {
                final double radius = (double) radiusSpinner.getValue();
                for (Sheet<?> s : gc.getSheets()) {
                    s.setCornerRadius(radius);
                }
                if (ed instanceof AbstractGameComponentEditor) {
                    ((AbstractGameComponentEditor<?>) ed).redrawPreview();
                }
            }
        }
    }//GEN-LAST:event_radiusSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner radiusSpinner;
    // End of variables declaration//GEN-END:variables
}
