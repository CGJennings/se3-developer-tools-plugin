package ca.cgjennings.apps.arkham.plugins;

import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;
import java.lang.management.MemoryUsage;
import java.lang.management.ThreadMXBean;

/**
 * Status bar that displays current memory use in the memory use window.
 */
final class MemoryReadings extends javax.swing.JPanel {

    public MemoryReadings() {
        initComponents();
    }

    public void updateStats() {
        MemoryUsage hUsage = memBean.getHeapMemoryUsage();
        MemoryUsage nUsage = memBean.getNonHeapMemoryUsage();

        long used = hUsage.getUsed() + nUsage.getUsed();
        long commit = hUsage.getCommitted() + nUsage.getCommitted();
        long max = hUsage.getMax() + nUsage.getMax();

        StringBuilder b = new StringBuilder("In use: ");
        b.append(String.format("%.1f", used / BYTES_PER_MB));
        if (max > 0) {
            b.append(" / ").append(String.format("%.1f", max / BYTES_PER_MB));
        }
        b.append(" MiB    Committed: ").append(String.format("%.1f", commit / BYTES_PER_MB)).append(" MiB");
        c1.setText(b.toString());

        c2.setText(String.format("    %d Threads", threadBean.getThreadCount()));
    }

    private MemoryMXBean memBean = ManagementFactory.getMemoryMXBean();
    private ThreadMXBean threadBean = ManagementFactory.getThreadMXBean();
    private static final double BYTES_PER_MB = 1024 * 1024;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        c1 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();

        setBackground(java.awt.Color.darkGray);
        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(1, 0, 0, 0), javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, java.awt.Color.lightGray)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        setLayout(new java.awt.GridBagLayout());

        c1.setFont(c1.getFont().deriveFont(c1.getFont().getSize()-1f));
        c1.setForeground(java.awt.Color.white);
        c1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        add(c1, gridBagConstraints);

        c2.setFont(c2.getFont().deriveFont(c2.getFont().getSize()-1f));
        c2.setForeground(java.awt.Color.white);
        c2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        add(c2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel c1;
    private javax.swing.JLabel c2;
    // End of variables declaration//GEN-END:variables
}
